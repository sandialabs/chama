# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: 
    - '**'
  pull_request:
    branches:
    - '**'
  schedule:
    - cron: '0 0 1 * *'
    
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
        ls dist/*
    - name: Save wheel
      uses: actions/upload-artifact@v3
      with:
        name: wheel
        path: dist/chama*.whl

  #test:
  #  name: Import test
  #  needs: build
  #  runs-on: ${{ matrix.os }}
  #  strategy:
  #    matrix:
  #      python-version: [3.7, 3.8, 3.9]
  #      os: [ubuntu-latest]    
  #  steps:
  #  - name: Set up Python 
  #    uses: actions/setup-python@v2
  #    with:
  #      python-version: ${{ matrix.python-version }}
  #  - name: Download wheel
  #    uses: actions/download-artifact@v2
  #    with:
  #      name: wheel
  #  - name: Install chama
  #    run: |
  #      python -m pip install --upgrade pip
  #      pip install wheel
  #      pip install --find-links=. chama
  #  - name: Import test
  #    run: |
  #      python -c "import chama"

  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        conda config --set always_yes yes --set changeps1 no
        python --version
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        conda install -y -c conda-forge glpk
        pip install coverage coveralls wntr
        python setup.py develop
    - name: Run Tests
      run: |
        export PATH=/usr/share/miniconda/bin:$PATH
        coverage erase
        coverage run --context=${{ matrix.os }}.py${{ matrix.python-version }} --source=chama --omit="*/tests/*" -m nose -v --nologcapture --with-doctest --doctest-extension=.rst --traverse-namespace documentation/*.rst chama
      env:
        COVERAGE_FILE: .coverage.${{ matrix.python-version }}.${{ matrix.os }}
    - name: Save coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: .coverage.${{ matrix.python-version }}.${{ matrix.os }}

  coverage:
    needs: [ linux ]
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: actions/checkout@v2
    - name: Install coverage
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coveralls
        python setup.py develop
    - name: Download coverage artifacts from test matrix
      uses: actions/download-artifact@v2
      with:
        name: coverage
    - name: Setup coverage and combine reports
      run: |
        echo "[paths]" > .coveragerc
        echo "source = " >> .coveragerc
        echo "    chama/" >> .coveragerc
        echo "    chama\\" >> .coveragerc
        echo "    D:\\a\\chama\\chama\\chama" >> .coveragerc
        echo "    /home/runner/work/chama/chama/chama" >> .coveragerc
        echo "    /Users/runner/work/chama/chama/chama" >> .coveragerc
        coverage combine
    - name: Create coverage report
      run: |
        coverage report
        coverage json --pretty-print
        coverage html --show-contexts
    - name: Save coverage JSON
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.json
    - name: Save coverage html
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: htmlcov

  coveralls:
    needs: [ linux ]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - uses: actions/checkout@v2
    - name: Install coverage
      run: |
        python -m pip install --upgrade pip
        pip install coveralls
        pip install -r requirements.txt
        python setup.py develop
    - name: Download coverage artifacts from test matrix
      uses: actions/download-artifact@v2
      with:
        name: coverage
    - name: Setup coverage and combine reports
      run: |
        echo "[paths]" > .coveragerc
        echo "source = " >> .coveragerc
        echo "    chama/" >> .coveragerc
        echo "    chama\\" >> .coveragerc
        echo "    D:\\a\\chama\\chama\\chama" >> .coveragerc
        echo "    /home/runner/work/chama/chama/chama" >> .coveragerc
        echo "    /Users/runner/work/chama/chama/chama" >> .coveragerc
        coverage combine
    - name: Push to coveralls
      run: |
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
